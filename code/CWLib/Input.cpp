#include "Input.h"
#include "hook.h"

MH_DefineFunc(_SetButtonPrompt, 0x002653fc, TOC0, void, EButtonPrompts button, wchar_t const* lams_key, EPlayerNumber player);


static EButtonPrompts gButtonPrompts[] =
{
    BP_CROSS, // BUTTON_CONFIG_JUMP
    BP_R1, // BUTTON_CONFIG_SLAP
    BP_R1, // BUTTON_CONFIG_GRAB
    BP_R1, // BUTTON_CONFIG_GUN
    BP_CIRCLE, // BUTTON_CONFIG_CHANGE_TOOL
    BP_SQUARE, // BUTTON_CONFIG_CAMERA_SHOOT
    BP_CROSS, // BUTTON_CONFIG_PODCOMPUTER_SELECT
    BP_CIRCLE, // BUTTON_CONFIG_PODCOMPUTER_CANCEL
    BP_SQUARE, // BUTTON_CONFIG_POPPET_OPEN
    BP_MENU_SELECT, // BUTTON_CONFIG_POPPET_ACTION
    BP_MENU_CANCEL, // BUTTON_CONFIG_POPPET_CANCEL
    BP_TRIANGLE, // BUTTON_CONFIG_POPPET_DELETE
    BP_R1, // BUTTON_CONFIG_POPPET_NEXTVERT
    BP_L1, // BUTTON_CONFIG_POPPET_PREVVERT
    BP_L1, // BUTTON_CONFIG_POPPET_MOVE_FORWARD
    BP_R1, // BUTTON_CONFIG_POPPET_INCREASE_THICKNESS
    BP_L2, // BUTTON_CONFIG_POPPET_MOVE_BACKWARD
    BP_R2, // BUTTON_CONFIG_POPPET_DECREASE_THICKNESS
    BP_L3, // BUTTON_CONFIG_POPPET_COPY
    BP_R3, // BUTTON_CONFIG_POPPET_FLIPX
    BP_R3, // BUTTON_CONFIG_POPPET_STICKER_FLIP
    BP_SQUARE, // BUTTON_CONFIG_POPPET_ORGANISE
    BP_SQUARE, // BUTTON_CONFIG_POPPET_SELFTIMER_TAKEPHOTO
    BP_CIRCLE, // BUTTON_CONFIG_POPPET_SELFTIMER_CANCELPHOTO
    BP_LAST, // BUTTON_CONFIG_CHEAT
    BP_LAST, // BUTTON_CONFIG_CHEAT_CLOSE_UP
    BP_LAST, // BUTTON_CONFIG_CHEAT_TELEPORT
    BP_START, // BUTTON_CONFIG_PAUSE_ENTER
    BP_START, // BUTTON_CONFIG_PAUSE_LEAVE
    BP_SQUARE, // BUTTON_CONFIG_POPPET_TWEAK
    BP_LAST, // BUTTON_CONFIG_CAMERA_DEBUG_ZOOM
    BP_R3, // BUTTON_CONFIG_CAMERA_ZONE_RESET_PITCH
    BP_DPAD_LEFT, // BUTTON_CONFIG_POPPET_UNDO
    BP_DPAD_RIGHT, // BUTTON_CONFIG_POPPET_REDO
    BP_DPAD_UP, // BUTTON_CONFIG_POPPET_PAUSE
    BP_MENU_CANCEL, // BUTTON_CONFIG_POPPET_CANCEL_UI
    BP_MENU_SELECT, // BUTTON_CONFIG_POPPET_ACTION_UI
    BP_SQUARE, // BUTTON_CONFIG_POPPET_TWEAK_UI
    BP_TRIANGLE, // BUTTON_CONFIG_POPPET_DELETE_UI
    BP_SQUARE, // BUTTON_CONFIG_POPPET_OPEN_UI
    BP_L2, // BUTTON_CONFIG_POPPET_CAMERA_TWEAK_ZOOM_IN
    BP_L1, // BUTTON_CONFIG_POPPET_CAMERA_TWEAK_ZOOM_OUT
    BP_SELECT, // BUTTON_CONFIG_GRIEF
    BP_DPAD_DOWN, // BUTTON_CONFIG_EDIT_JETPACK
    BP_L2, // BUTTON_CONFIG_ACTING_LEFT
    BP_R2, // BUTTON_CONFIG_ACTING_RIGHT
    BP_MENU_CANCEL, // BUTTON_CONFIG_POPPET_VIDEO_STOP
    BP_LAST, // BUTTON_CONFIG_EDIT_CAMERA_DEACTIVATE
    BP_LAST, // BUTTON_CONFIG_SKIP_VIDEO
    BP_SQUARE, // BUTTON_CONFIG_LIMBO_TEXT_CHAT
    BP_CIRCLE, // BUTTON_CONFIG_REMOVE_JETPACK
    BP_MENU_CANCEL, // BUTTON_CONFIG_POPPET_CANCEL_STATE
    BP_CIRCLE, // BUTTON_CONFIG_REMOVE_GUN
    BP_TRIANGLE, // BUTTON_CONFIG_ACTIVATE_DIRECT_CONTROL
    BP_L3, // BUTTON_CONFIG_DEACTIVATE_DIRECT_CONTROL
    BP_CIRCLE, // BUTTON_CONFIG_REMOVE_SCUBA_GEAR

    BP_R1, // BUTTON_CONFIG_FORCE
    BP_CIRCLE, // BUTTON_CONFIG_REMOVE_FORCE
    BP_CIRCLE, // BUTTON_CONFIG_REMOVE_BOOTS
    BP_R1, // BUTTON_CONFIG_GRAPPLE
    BP_CIRCLE, // BUTTON_CONFIG_REMOVE_GRAPPLE
    BP_CIRCLE, // BUTTON_CONFIG_REMOVE_POWER_GLOVES
    
    BP_CIRCLE, // BUTTON_CONFIG_REMOVE_GAS_MASK
    BP_CIRCLE, // BUTTON_CONFIG_REMOVE_DIVER_SUIT
    BP_CIRCLE, // BUTTON_CONFIG_REMOVE_SWIMMING_FINS
    BP_CIRCLE, // BUTTON_CONFIG_REMOVE_MINI_SUIT

    BP_LAST, // BUTTON_CONFIG_POPPET_TOGGLE_VISIBILITY
    BP_LAST, // BUTTON_CONFIG_POPPET_HIDE,
    BP_LAST, // BUTTON_CONFIG_POPPET_SHOW
    BP_L3, // BUTTON_CONFIG_POPPET_SWITCH_STAMP_MODE,
    BP_R3, // BUTTON_CONFIG_POPPET_TOGGLE_TETHER_UI
    BP_L3, // BUTTON_CONFIG_POPPET_TOGGLE_INVENTORY_UI
};

bool CInput::IsClicked(EButtonConfig button_config, u32 buttons) const
{
    // Only implementing our custom input types here
    switch (button_config)
    {
        case BUTTON_CONFIG_POPPET_HIDE:
            return (buttons & PAD_BUTTON_L2) != 0;
        case BUTTON_CONFIG_POPPET_SHOW:
            return (buttons & PAD_BUTTON_L1) != 0;
        case BUTTON_CONFIG_FORCE:
        case BUTTON_CONFIG_GRAPPLE:
            return (buttons & PAD_BUTTON_R1) != 0;
        case BUTTON_CONFIG_REMOVE_GUN:
        case BUTTON_CONFIG_REMOVE_FORCE:
        case BUTTON_CONFIG_REMOVE_BOOTS:
        case BUTTON_CONFIG_REMOVE_GRAPPLE:
        case BUTTON_CONFIG_REMOVE_POWER_GLOVES:
        case BUTTON_CONFIG_REMOVE_GAS_MASK:
        case BUTTON_CONFIG_REMOVE_DIVER_SUIT:
        case BUTTON_CONFIG_REMOVE_SWIMMING_FINS:
        case BUTTON_CONFIG_REMOVE_MINI_SUIT:
            return (buttons & PAD_BUTTON_CIRCLE) != 0;
        case BUTTON_CONFIG_POPPET_SWITCH_STAMP_MODE:
            return (buttons & PAD_BUTTON_L3) != 0;
        case BUTTON_CONFIG_POPPET_TOGGLE_TETHER_UI:
            return (buttons & PAD_BUTTON_R3) != 0;
        case BUTTON_CONFIG_POPPET_TOGGLE_INVENTORY_UI:
            return (buttons & PAD_BUTTON_L3) != 0;
        default: return false;
    }
}

u32 CInput::GetListenerType(EButtonConfig button_config) const
{
    switch (button_config)
    {
        case BUTTON_CONFIG_JUMP:
        case BUTTON_CONFIG_SLAP:
        case BUTTON_CONFIG_GRAB:
        case BUTTON_CONFIG_GUN:
        case BUTTON_CONFIG_CHANGE_TOOL:
        case BUTTON_CONFIG_CAMERA_SHOOT:
        case BUTTON_CONFIG_POPPET_OPEN:
        case BUTTON_CONFIG_POPPET_SELFTIMER_TAKEPHOTO:
        case BUTTON_CONFIG_POPPET_SELFTIMER_CANCELPHOTO:
        case BUTTON_CONFIG_CHEAT:
        case BUTTON_CONFIG_CHEAT_CLOSE_UP:
        case BUTTON_CONFIG_CHEAT_TELEPORT:
        case BUTTON_CONFIG_CAMERA_DEBUG_ZOOM:
        case BUTTON_CONFIG_ACTING_LEFT:
        case BUTTON_CONFIG_ACTING_RIGHT:
        case BUTTON_CONFIG_LIMBO_TEXT_CHAT:
        case BUTTON_CONFIG_REMOVE_JETPACK:
        case BUTTON_CONFIG_REMOVE_GUN:
        case BUTTON_CONFIG_ACTIVATE_DIRECT_CONTROL:
        case BUTTON_CONFIG_REMOVE_SCUBA_GEAR:

        case BUTTON_CONFIG_FORCE:
        case BUTTON_CONFIG_REMOVE_FORCE:
        case BUTTON_CONFIG_REMOVE_BOOTS:
        case BUTTON_CONFIG_GRAPPLE:
        case BUTTON_CONFIG_REMOVE_GRAPPLE:
        case BUTTON_CONFIG_REMOVE_POWER_GLOVES:

        case BUTTON_CONFIG_REMOVE_GAS_MASK:
        case BUTTON_CONFIG_REMOVE_DIVER_SUIT:
        case BUTTON_CONFIG_REMOVE_SWIMMING_FINS:
        case BUTTON_CONFIG_REMOVE_MINI_SUIT:
            return INPUT_SACKBOY;

        case BUTTON_CONFIG_PODCOMPUTER_SELECT:
        case BUTTON_CONFIG_PODCOMPUTER_CANCEL:
            return INPUT_POD_COMPUTER;

        case BUTTON_CONFIG_POPPET_ACTION:
        case BUTTON_CONFIG_POPPET_CANCEL:
        case BUTTON_CONFIG_POPPET_DELETE:
        case BUTTON_CONFIG_POPPET_NEXTVERT:
        case BUTTON_CONFIG_POPPET_PREVVERT:
        case BUTTON_CONFIG_POPPET_MOVE_FORWARD:
        case BUTTON_CONFIG_POPPET_INCREASE_THICKNESS:
        case BUTTON_CONFIG_POPPET_MOVE_BACKWARD:
        case BUTTON_CONFIG_POPPET_DECREASE_THICKNESS:
        case BUTTON_CONFIG_POPPET_COPY:
        case BUTTON_CONFIG_POPPET_FLIPX:
        case BUTTON_CONFIG_POPPET_STICKER_FLIP:
        case BUTTON_CONFIG_POPPET_ORGANISE:
        case BUTTON_CONFIG_POPPET_TOGGLE_VISIBILITY:
        case BUTTON_CONFIG_POPPET_HIDE:
        case BUTTON_CONFIG_POPPET_SHOW:
        case BUTTON_CONFIG_POPPET_TWEAK:
        case BUTTON_CONFIG_POPPET_CAMERA_TWEAK_ZOOM_IN:
        case BUTTON_CONFIG_POPPET_CAMERA_TWEAK_ZOOM_OUT:
        case BUTTON_CONFIG_POPPET_SWITCH_STAMP_MODE:
            return INPUT_POPPET;

        case BUTTON_CONFIG_PAUSE_ENTER:
            return INPUT_SACKBOY | INPUT_POPPET | INPUT_POD_COMPUTER | INPUT_EARTH | INPUT_POPPET_REMOTE | INPUT_POPPET_UI | INPUT_POPPET_STATE | INPUT_PLANETS;

        case BUTTON_CONFIG_PAUSE_LEAVE:
            return INPUT_SAVE_AS | INPUT_OVERLAY_UI;
        
        case BUTTON_CONFIG_CAMERA_ZONE_RESET_PITCH:
        case BUTTON_CONFIG_POPPET_CANCEL_UI:
        case BUTTON_CONFIG_POPPET_ACTION_UI:
        case BUTTON_CONFIG_POPPET_TWEAK_UI:
        case BUTTON_CONFIG_POPPET_DELETE_UI:
        case BUTTON_CONFIG_POPPET_OPEN_UI:
        case BUTTON_CONFIG_POPPET_TOGGLE_TETHER_UI:
        case BUTTON_CONFIG_POPPET_TOGGLE_INVENTORY_UI:
            return INPUT_POPPET_UI;

        case BUTTON_CONFIG_POPPET_UNDO:
        case BUTTON_CONFIG_POPPET_REDO:
        case BUTTON_CONFIG_POPPET_PAUSE:
        case BUTTON_CONFIG_EDIT_JETPACK:
        case BUTTON_CONFIG_EDIT_CAMERA_DEACTIVATE:
            return INPUT_SACKBOY | INPUT_POPPET;
        
        case BUTTON_CONFIG_GRIEF:
            return INPUT_SACKBOY | INPUT_POPPET | INPUT_POD_COMPUTER | INPUT_EARTH | INPUT_POPPET_REMOTE | INPUT_POPPET_UI | INPUT_POPPET_STATE | INPUT_PLANETS | INPUT_SNAPPY_SNAPS | INPUT_SAVE_AS;
        
        case BUTTON_CONFIG_SKIP_VIDEO:
            return INPUT_ALL;
        
        case BUTTON_CONFIG_POPPET_CANCEL_STATE:
            return INPUT_POPPET_STATE;
        
        case BUTTON_CONFIG_DEACTIVATE_DIRECT_CONTROL:
            return INPUT_DIRECT_CONTROL;    
        
        default: return INPUT_NONE;
    }
}

void CInput::SetButtonPrompt(EButtonConfig button_config, wchar_t const* lams_key) const
{
    if (lams_key == NULL || button_config >= NUM_BUTTON_CONFIG) return;
    EButtonPrompts bp = gButtonPrompts[button_config];
    if (bp == BP_LAST) return;
    _SetButtonPrompt(bp, lams_key, PlayerNumber);
}